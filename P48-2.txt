#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX 20 
typedef struct 
{
	char *base;
	char *top;
	int stacksize; 
}SqStack;


//创建 栈 
SqStack InitStack()
{
	SqStack S ;
	S.base=(char *)malloc(sizeof(char)*MAX ); 
	S.top=S.base;
	S.stacksize=MAX;
	return S;
}
// 入栈
SqStack Push  (SqStack S,char i)
{
	
	*S.top++=i;
	return S;
}
//出栈
//SqStack Pop (SqStack *S,int e)
//{
//	e=*--S.top;
//	return S;
//}
//判断顺序栈是否为空
int StackEmpty (SqStack S)
{
	if(S.top==S.base)
	return 1;
	else
	return 0; 
} 
//出栈
char Pop (SqStack *S)
{
	char e=*--S->top;
	return e;
} 
//////打印
void Printlist(SqStack S,int len)
{
	int i;
		for(i=0;i<len/2;i++)
	{
		printf("%c",S.base[i]);
	}
}

//判断回文
int IsPalindrome(char *t) 
{
	SqStack S=InitStack();
	int len=strlen(t);
	int i;
	for(i=0;i<len/2;i++)
		S=Push(S,t[i]);
	if(len%2!=0)
	i++;
//	Printlist(S,len);///
//	printf("\n");
	while(!StackEmpty(S))
	{
		char temp=Pop(&S);
		
	//	printf("%c",temp);////
		
		if(temp!=t[i])
		return 0;
		else 
		i++;
	}
	return 1;
}
int main()
{
	char t[MAX]={0};
	printf("String:");
	scanf("%s",t);

	if(IsPalindrome(t))
	printf("YES!\n");
	else
	printf("NO!\n");
}
 