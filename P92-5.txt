#include <stdio.h>
#include <stdlib.h> //NULL
#define ElemType char
#define n 20
//二叉链表 
typedef struct BiTNode 
{
	ElemType data;
	struct BiTNode* lchild;
	struct BiTNode* rchild;
}BiNode,*BiTree;

//创建线索二叉树  要求用户 先序遍历输入数据
BiTree CreateBiTree()
{
	BiTree T;////
	char c;
	scanf("%c",&c);
	
	if('#' ==c)
	{
		T =NULL;
	}
	else//递归 
	{
		T = (BiTree)malloc(sizeof(BiNode));
		T->data =c;
	
		T->lchild = CreateBiTree();// 
		T->rchild= CreateBiTree();
	}
	return T;
} 
//访问二叉树 
void visit(int level ,int max[])
{
	max[level]++;
}
//遍历二叉树（） 
void Max_Breadth(BiTree T , int level,int max[])
{
	if( T )
	{
		visit(level,max);   //先序：根->左->右 
		Max_Breadth(T->lchild,level+1,max); 
		Max_Breadth(T->rchild,level+1,max);
	}
} 
 int main()
 {		
    printf("请按 先序 顺序输入节点值，输入‘#’代表节点为空：\n");
    BiTree root = CreateBiTree();
    printf("\n");
 	int level=1;
 	int max[n];
 	//初始化
 	int i;
	 for(i=0 ; i< n;i++)
	{
		max[i] = 0;
	}
 	Max_Breadth( root , level , max);
 	int rmax =-1;
 	for(i=0;i<n;i++)
 	{
 		if(rmax < max[i])
 		rmax = max[i];
	}
    printf("max width = %d \n",rmax);
 }