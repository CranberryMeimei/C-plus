#include <stdio.h>
#include <stdlib.h> //NULL
#define ElemType char

//二叉链表 
typedef struct BiTNode 
{
	ElemType data;
	struct BiTNode* lchild;
	struct BiTNode* rchild;
}BiNode,*BiTree;

 
//创建线索二叉树  要求用户 先序遍历输入数据
BiTree CreateBiTree()
{
	BiTree T;////
	char c;
	scanf("%c",&c);
	
	if('#' ==c)
	{
		T =NULL;
	}
	else//递归 
	{
		T = (BiTree)malloc(sizeof(BiNode));
		T->data =c;
	
		T->lchild = CreateBiTree();
		T->rchild= CreateBiTree();
	}
	return T;
}

//路径 输出 
void AllPath ( BiTree T , ElemType path[] ,int len)
{
	if(T)
	{
		if(T->lchild==NULL&&T->rchild==NULL)
		{
			int i;
			printf("%c->",T->data);
			for(i= len-1;i>0;i--)
			{
				printf("%c->",path[i]);
			}
			printf("%c",path[0]);
			printf("\n");
		}
		else
		{
			path[len++] = T->data ;
			AllPath (T->lchild , path, len );
			AllPath (T->rchild ,path ,len) ;
		}
	} 
}

int main()
{
	printf("请按 先序 顺序输入节点值，输入‘#’代表节点为空：\n");
    BiTree root = CreateBiTree();
    ElemType path[10];
    int len = 0;
    AllPath ( root ,  path ,len);
}